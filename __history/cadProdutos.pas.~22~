unit cadProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.Buttons,
  Vcl.Imaging.pngimage, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls,
  Vcl.Grids, Vcl.DBGrids;

type
  Tprodutos = class(TForm)
    painelProdutos: TPanel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    nomeP: TDBEdit;
    estoqueP: TDBEdit;
    descP: TDBEdit;
    Panel1: TPanel;
    Panel5: TPanel;
    Image4: TImage;
    SpeedButton7: TSpeedButton;
    SpeedButton8: TSpeedButton;
    Panel4: TPanel;
    Image1: TImage;
    SpeedButton1: TSpeedButton;
    SpeedButton6: TSpeedButton;
    Panel2: TPanel;
    Image2: TImage;
    SpeedButton2: TSpeedButton;
    SpeedButton4: TSpeedButton;
    Panel3: TPanel;
    Image3: TImage;
    SpeedButton3: TSpeedButton;
    SpeedButton5: TSpeedButton;
    Panel6: TPanel;
    Label21: TLabel;
    DBGrid1: TDBGrid;
    pesquisa: TEdit;
    Panel7: TPanel;
    Label22: TLabel;
    pesqcpf: TRadioButton;
    pesqfantasia: TRadioButton;
    unudadeP: TDBLookupComboBox;
    categoriaP: TDBLookupComboBox;
    Label1: TLabel;
    Label27: TLabel;
    Label24: TLabel;
    Label6: TLabel;
    DBEdit1: TDBEdit;
    Label7: TLabel;
    procedure SpeedButton4Click(Sender: TObject);
    procedure SpeedButton5Click(Sender: TObject);
    procedure SpeedButton8Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  produtos: Tprodutos;

implementation

{$R *.dfm}

uses unitDM;

procedure Tprodutos.SpeedButton4Click(Sender: TObject);
begin
try
    //Validando os campos
    if Trim(DataModule1.tbproduto.FieldByName('nome').AsString) = '' then
    begin
      ShowMessage('o campo Nome do Produto é obrigatório!');
      Exit;
    end;

    if Trim(DataModule1.tbproduto.FieldByName('descricao').AsString) = '' then
    begin
      ShowMessage('o campo Descrição é obrigatório!');
      Exit;
    end;

    if Trim(DataModule1.tbproduto.FieldByName('idunidadefk').AsString) = '' then
    begin
      ShowMessage('o campo Unidade de Medida é obrigatório!');
      Exit;
    end;

    if Trim(DataModule1.tbproduto.FieldByName('idcategoria_fk').AsString) = '' then
    begin
      ShowMessage('o campo Categoria é obrigatório!');
      Exit;
    end;

    if Trim(DataModule1.tbproduto.FieldByName('idcategoria_fk').AsString) = '' then
    begin
      ShowMessage('o campo Categoria é obrigatório!');
      Exit;
    end;



    // iniciando a ação de salvar
    if DataModule1.tbproduto.State in [dsEdit, dsInsert] then
    begin
      DataModule1.tbproduto.Post; // Salva as alterações
      ShowMessage('Alterações salvas com sucesso!');
    end
    else
      ShowMessage('Nenhum registro está em modo de edição ou inserção.');
  except
    on E: Exception do
    begin
      ShowMessage('Erro ao salvar alterações: ' + E.Message);
      DataModule1.tbproduto.Cancel; // Cancela as alterações caso ocorra erro
    end;
  end;
end;

procedure Tprodutos.SpeedButton5Click(Sender: TObject);
begin
//Prepara o dataset para um novo registro
DataModule1.tbproduto.Append;
nomeP.SetFocus;
end;

procedure Tprodutos.SpeedButton8Click(Sender: TObject);
  begin
    if not DataModule1.tbproduto.IsEmpty then
    begin
      DataModule1.tbproduto.Edit; // coloca o registro em modo de edição
    end
    else
      ShowMessage('Nenhum Registro selecionado para editar');
  end;

end.
